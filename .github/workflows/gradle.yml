# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: usedauction-back
  CODE_DEPLOY_APPLICATION_NAME: usedauction-codeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: usedauction-codeDeploy-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.SUBMODULE_TOKEN}}
          submodules: true

      - name: Set up Java version
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      # (3) Gradle build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: clean build
      # build
      #- name: Build with Gradle
      #  run: ./gradlew clean build
      - name: Copy JAR to Azure VM
        env:
          AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
        run: |
          CURRENT_DATE_TIME=$(date +"%Y%m%d%H%M")
          DESTINATION_FILE_NAME="usedauction-${CURRENT_DATE_TIME}.jar"
          echo "${{ secrets.AZURE_SSH_KEY }}" > id_rsa
          chmod 600 id_rsa
          scp -o StrictHostKeyChecking=no -i id_rsa build/libs/*SNAPSHOT.jar $AZURE_USERNAME@$AZURE_VM_IP:/home/$AZURE_USERNAME/$DESTINATION_FILE_NAME

      - name: Run Spring Boot application on Azure VM
        env:
          AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa $AZURE_USERNAME@$AZURE_VM_IP "nohup java -jar $DESTINATION_FILE_NAME > app.log 2>&1 &"

      ### Azure web app deploy
      # - name: Upload artifact for deployment job
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: usedAuction
      #     path: .
      #     retention-days: 1

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

    # steps:
    #   - name: Download artifact from build job
    #     uses: actions/download-artifact@v3
    #     with:
    #       name: usedAuction

      # - name: Login to Azure
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.CLIENT_ID_SECRET_NAME }}
      #     tenant-id: ${{ secrets.TENANT_ID_SECRET_NAME }}
      #     subscription-id: ${{ secrets.SUBSCRIPTION_ID_SECRET_NAME }}

      # - name: Deploy to Azure Web App
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: 'usedAuction'
      #     slot-name: 'production'
      #     package: '*SNAPSHOT.jar'
